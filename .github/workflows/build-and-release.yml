name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags (v1.0.0, v2.1.3, etc.)
  workflow_dispatch:  # Allow manual triggering

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-mock pytest-xdist

      - name: Run tests
        env:
          K8SH_MOCK: 1
        run: |
          python -m pytest -n auto

  build-package:
    name: Build Debian Package
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract version from tag
        id: get_version
        run: |
          # Default version if not a tag
          VERSION="1.0.0"
          
          # If this is a tag push, extract version from the tag
          if [[ "${{ github.ref }}" == refs/tags/v* ]]; then
            VERSION="${{ github.ref_name }}"
            VERSION="${VERSION#v}"  # Remove 'v' prefix
          fi
          
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Update package version in Dockerfile
        run: |
          # Replace the version in the Dockerfile
          sed -i "s/--version [0-9]\+\.[0-9]\+\.[0-9]\+/--version ${{ env.VERSION }}/g" Dockerfile

      - name: Build Debian package
        run: |
          # Enable Docker BuildKit
          export DOCKER_BUILDKIT=1
          
          # Build the Docker image and output the package
          docker build --target export-stage --output type=local,dest=. .
          
          # Rename the package to include version
          mv k8sh.deb k8sh_${{ env.VERSION }}_all.deb

      - name: Upload Debian package as artifact
        uses: actions/upload-artifact@v4
        with:
          name: k8sh-package
          path: k8sh_${{ env.VERSION }}_all.deb
          retention-days: 7

  release:
    name: Create Release
    needs: build-package
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download package artifact
        uses: actions/download-artifact@v4
        with:
          name: k8sh-package

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: k8sh_*_all.deb
          draft: false
          prerelease: false
          generate_release_notes: true
